/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        mm_grave_escape: mm_grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_GRAVE_ESCAPE";
            bindings =
                <&kp ESCAPE>,
                <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };
        ht_mo_tog: ht_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_MO_TOG";
            bindings =
                <&mo>,
                <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
        as: ht_auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_AUTO_SHIFT";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;

            tapping-term-ms = <200>;
        };
        td_shift_caps: td_shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFT_CAPS";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_SHIFT>,
                <&kp CAPSLOCK>;
        };
        td_lower_mac: td_lower_mac {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LOWER_MAC";
            #binding-cells = <0>;
            bindings =
                <&mo 1>,
                <&to 1>;
        };
        td_raise_mac: td_raise_mac {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_RAISE_MAC";
            #binding-cells = <0>;
            bindings =
                <&mo 2>,
                <&to 2>;
        };
        as_slow: as_slow {
            compatible = "zmk,behavior-hold-tap";
            label = "AS_SLOW";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };
        td_raise_win: td_raise_win {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_RAISE_WIN";
            #binding-cells = <0>;
            bindings =
                <&mo 6>,
                <&to 6>;
        };
        td_lower_win: td_lower_win {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LOWER_WIN";
            #binding-cells = <0>;
            bindings =
                <&mo 5>,
                <&to 5>;
        };
        td_play_next: td_play_next {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_PLAY_NEXT";
            #binding-cells = <0>;
            bindings =
                <&kp C_PLAY_PAUSE>,
                <&kp C_NEXT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer_mac {
            bindings = <
&mm_grave_escape  &as LS(N1) NUMBER_1  &as LS(N2) NUMBER_2  &as LS(N3) NUMBER_3  &as LS(N4) NUMBER_4  &as LS(N5) NUMBER_5                                &as LS(N6) NUMBER_6  &as LS(N7) NUMBER_7  &as LS(N8) NUMBER_8  &as LS(N9) NUMBER_9     &as LS(N0) NUMBER_0  &as LS(BACKSLASH) BACKSLASH
         &kp TAB     &as_slow LS(Q) Q          &as LS(W) W          &as LS(E) E          &as LS(R) R          &as LS(T) T                                        &as LS(Y) Y          &as LS(U) U          &as LS(I) I          &as LS(O) O        &as_slow LS(P) P       &as LA(BSPC) BACKSPACE
  &kp LEFT_SHIFT     &as_slow LS(A) A          &as LS(S) S          &as LS(D) D          &as LS(F) F          &as LS(G) G                                        &as LS(H) H          &as LS(J) J          &as LS(K) K          &as LS(L) L  &as LS(SEMI) SEMICOLON     &as LS(SQT) SINGLE_QUOTE
&kp LEFT_CONTROL     &as_slow LS(Z) Z          &as LS(X) X          &as LS(C) C          &as LS(V) V          &as LS(B) B  &td_play_next  &kp LA(LS(I))          &as LS(N) N          &as LS(M) M  &as LS(COMMA) COMMA   &as LS(DOT) PERIOD      &as LS(FSLH) SLASH                     &kp CLCK
                                                     &mo 9             &kp LALT     &kp LEFT_COMMAND                &mo 1      &kp ENTER      &kp SPACE                &mo 2                &mo 3    &kp LA(BACKSPACE)       &kp LA(DELETE)
            >;
        };

        lower_layer_mac {
            bindings = <
&as LS(GRAVE) GRAVE  &none      &none      &none           &none                 &none                                 &trans             &trans  &trans  &trans  &trans                  &none
             &trans  &none  &kp TILDE  &kp GRAVE         &kp SQT        &kp LEFT_BRACE                        &kp RIGHT_BRACE  &kp DOUBLE_QUOTES   &none   &none   &none  &as LA(DELETE) DELETE
             &trans  &none      &none      &none       &kp MINUS  &kp LEFT_PARENTHESIS                  &kp RIGHT_PARENTHESIS           &kp PLUS   &none   &none  &trans                 &trans
             &trans  &none      &none      &none  &kp UNDERSCORE      &kp LEFT_BRACKET   &none   &none      &kp RIGHT_BRACKET          &kp EQUAL  &trans  &trans  &trans                  &none
                               &trans     &trans          &trans                &trans  &trans  &trans                  &to 0             &trans  &trans  &trans
            >;
        };

        raise_layer_mac {
            bindings = <
&as LS(GRAVE) GRAVE   &kp F1   &kp F2  &kp F3  &kp F4   &kp F5                          &none  &kp LS(LG(NUMBER_4))  &kp LG(UP_ARROW)  &kp LS(LG(NUMBER_3))  &none                  &none
             &trans   &kp F6   &kp F7  &kp F8  &kp F9  &kp F10                    &kp PAGE_UP          &kp LA(LEFT)            &kp UP         &kp LA(RIGHT)  &none  &as LA(DELETE) DELETE
             &trans  &kp F11  &kp F12   &none   &none    &none                  &kp PAGE_DOWN              &kp LEFT          &kp DOWN             &kp RIGHT  &none                  &none
             &trans    &none    &none   &none   &none    &none  &trans  &trans          &none          &kp LG(LEFT)      &kp LG(DOWN)         &kp LG(RIGHT)  &none                  &none
                               &trans  &trans  &trans    &to 0  &trans  &trans         &trans                &trans            &trans                &trans
            >;
        };

        window_mgmt_layer_mac {
            bindings = <
&none  &none                 &none          &none                  &none  &none                &none                   &none                 &none              &none  &none  &none
&none  &none         &kp LA(LC(E))          &none          &kp LA(LC(T))  &none                &none           &kp LA(LC(U))  &kp LA(LC(UP_ARROW))      &kp LA(LC(I))  &none  &none
&none  &none         &kp LA(LC(D))  &kp LA(LC(F))          &kp LA(LC(G))  &none                &none  &kp LA(LC(LEFT_ARROW))     &kp LA(LC(ENTER))  &kp LA(LC(RIGHT))  &none  &none
&none  &none  &kp LC(LG(LA(LEFT)))          &none  &kp LA(LC(LG(RIGHT)))  &none  &none  &none  &none           &kp LA(LC(J))      &kp LA(LC(DOWN))      &kp LA(LC(K))  &none  &none
                            &trans          &none                  &none  &none  &none  &none  &none                   &none                 &none              &none
            >;
        };

        default_layer_win {
            bindings = <
&mm_grave_escape  &as LS(N1) NUMBER_1  &as LS(N2) NUMBER_2  &as LS(N3) NUMBER_3  &as LS(N4) NUMBER_4  &as LS(N5) NUMBER_5                                   &as LS(N6) NUMBER_6  &as LS(N7) NUMBER_7  &as LS(N8) NUMBER_8  &as LS(N9) NUMBER_9          &as LS(N0) NUMBER_0    &as LS(BACKSLASH) BACKSLASH
         &kp TAB     &as_slow LS(Q) Q          &as LS(W) W          &as LS(E) E          &as LS(R) R          &as LS(T) T                                           &as LS(Y) Y          &as LS(U) U          &as LS(I) I          &as LS(O) O             &as_slow LS(P) P         &as LC(BSPC) BACKSPACE
  &kp LEFT_SHIFT     &as_slow LS(A) A          &as LS(S) S          &as LS(D) D          &as LS(F) F          &as LS(G) G                                           &as LS(H) H          &as LS(J) J          &as LS(K) K          &as LS(L) L  &as_slow LS(SEMI) SEMICOLON  &as_slow LS(SQT) SINGLE_QUOTE
&kp LEFT_CONTROL     &as_slow LS(Z) Z          &as LS(X) X          &as LS(C) C          &as LS(V) V          &as LS(B) B  &kp C_PLAY_PAUSE  &kp LA(LS(I))          &as LS(N) N          &as LS(M) M  &as LS(COMMA) COMMA   &as LS(DOT) PERIOD      &as_slow LS(FSLH) SLASH                       &kp CLCK
                                                    &trans         &kp LEFT_GUI         &kp LEFT_ALT                &mo 5         &kp ENTER      &kp SPACE                &mo 6                &mo 7    &kp LC(BACKSPACE)       &kp LC(DELETE)
            >;
        };

        lower_layer_win {
            bindings = <
&as LS(GRAVE) GRAVE  &none      &none      &none           &none                 &none                                 &trans             &trans  &trans  &trans  &trans                  &none
             &trans  &none  &kp TILDE  &kp GRAVE         &kp SQT        &kp LEFT_BRACE                        &kp RIGHT_BRACE  &kp DOUBLE_QUOTES   &none   &none   &none  &as LC(DELETE) DELETE
             &trans  &none      &none      &none       &kp MINUS  &kp LEFT_PARENTHESIS                  &kp RIGHT_PARENTHESIS           &kp PLUS   &none   &none  &trans                 &trans
             &trans  &none      &none      &none  &kp UNDERSCORE      &kp LEFT_BRACKET   &none   &none      &kp RIGHT_BRACKET          &kp EQUAL  &trans  &trans  &trans                  &none
                               &trans     &trans          &trans                 &to 4  &trans  &trans                 &trans             &trans  &trans  &trans
            >;
        };

        raise_layer_win {
            bindings = <
&as LS(GRAVE) GRAVE   &kp F1   &kp F2  &kp F3  &kp F4   &kp F5                          &none  &kp LG(LS(S))  &kp LC(HOME)  &kp PRINTSCREEN  &none                  &none
             &trans   &kp F6   &kp F7  &kp F8  &kp F9  &kp F10                    &kp PAGE_UP   &kp LC(LEFT)        &kp UP    &kp LC(RIGHT)  &none  &as LC(DELETE) DELETE
             &trans  &kp F11  &kp F12   &none   &none    &none                  &kp PAGE_DOWN       &kp LEFT      &kp DOWN        &kp RIGHT  &none                  &none
             &trans    &none    &none   &none   &none    &none  &trans  &trans          &none       &kp HOME   &kp LC(END)          &kp END  &none                  &none
                               &trans  &trans  &trans   &trans  &trans  &trans          &to 4         &trans        &trans           &trans
            >;
        };

        window_mgmt_layer_win {
            bindings = <
&none  &none   &none  &none  &none  &none                &none               &none             &none          &none  &none  &none
&none  &none   &none  &none  &none  &none                &none               &none  &kp LG(UP_ARROW)          &none  &none  &none
&none  &none   &none  &none  &none  &none                &none  &kp LG(LEFT_ARROW)             &none  &kp LG(RIGHT)  &none  &none
&none  &none   &none  &none  &none  &none  &none  &none  &none               &none      &kp LG(DOWN)          &none  &none  &none
              &trans  &none  &none  &none  &none  &none  &none               &none             &none          &none
            >;
        };

        game_layer {
            bindings = <
  &kp ESC  &kp N1  &kp N2        &kp N3     &kp N4  &kp N5                    &kp N6         &kp N7     &kp N8             &kp N9          &kp N0   &kp PIPE
  &kp TAB   &kp Q   &kp W         &kp E      &kp R   &kp T                     &kp Y          &kp U      &kp I              &kp O           &kp P   &kp BSPC
 &kp CLCK   &kp A   &kp S         &kp D      &kp F   &kp G                     &kp H          &kp J      &kp K              &kp L    &kp UP_ARROW    &kp SQT
&kp LSHFT   &kp Z   &kp X  &kp LEFT_ALT      &kp V   &kp B  &kp M      &none   &kp N          &kp M  &kp COMMA           &kp LEFT  &kp DOWN_ARROW  &kp RIGHT
                   &trans     &kp LCTRL  &kp SPACE   &kp C  &kp V  &kp ENTER   &to 4  &kp RIGHT_GUI   &kp RALT  &kp RIGHT_CONTROL
            >;
        };

        system_layer {
            bindings = <
            &to 0            &to 1            &to 2            &to 3         &to 4         &to 5                &to 6  &to 7  &to 8  &to 9  &to 0  &none
 &ext_power EP_ON  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF         &none         &none                &none  &none  &none  &none  &none  &none
&ext_power EP_OFF  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_TOG         &none         &none                &none  &none  &none  &none  &none  &none
       &bt BT_CLR     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2  &out OUT_BLE  &out OUT_USB  &none  &none  &none  &none  &none  &none  &none  &none
                                             &trans            &none         &none         &none  &none  &none  &none  &none  &none  &none
            >;
        };
    };
};
